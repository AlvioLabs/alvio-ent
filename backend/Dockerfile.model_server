FROM python:3.11.7-slim-bookworm

LABEL com.danswer.maintainer="founders@alvio.io"
LABEL com.danswer.description="This image is for the Alvio model server which runs all of the \
AI models for Alvio. This container and all the code is MIT Licensed and free for all to use. \
You can find it at https://hub.docker.com/r/alvio/alvio-model-server. For more details, \
visit https://github.com/alvio-dot-io/alvio."

# Default ALVIO_VERSION, typically overriden during builds by GitHub Actions.
ARG ALVIO_VERSION=0.0.0-dev
ENV ALVIO_VERSION=${ALVIO_VERSION} \
    DANSWER_RUNNING_IN_DOCKER="true" \
    HF_HOME=/app/.cache/huggingface

RUN echo "ALVIO_VERSION: ${ALVIO_VERSION}"

# Create non-root user for security best practices
RUN mkdir -p /app && \
    groupadd -g 1001 alvio && \
    useradd -u 1001 -g alvio -m -s /bin/bash alvio  && \
    chown -R alvio:alvio /app && \
    mkdir -p /var/log/alvio && \
    chmod 755 /var/log/alvio && \
    chown alvio:alvio /var/log/alvio

# --- add toolchain needed for Rust/Python builds (fastuuid) ---
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

RUN set -eux; \
    apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        pkg-config \
        curl \
        ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    # Install latest stable Rust (supports Cargo.lock v4)
    && curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable \
    && rustc --version && cargo --version

COPY ./requirements/model_server.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --upgrade \
        --retries 5 \
        --timeout 30 \
        -r /tmp/requirements.txt

RUN apt-get remove -y --allow-remove-essential perl-base && \ 
    apt-get autoremove -y

# Pre-downloading public models for setups with limited egress
# Download tokenizers, distilbert, and other public models
RUN python -c "from transformers import AutoTokenizer; \
AutoTokenizer.from_pretrained('distilbert-base-uncased'); \
AutoTokenizer.from_pretrained('mixedbread-ai/mxbai-rerank-xsmall-v1'); \
from huggingface_hub import snapshot_download; \
snapshot_download('nomic-ai/nomic-embed-text-v1'); \
snapshot_download('mixedbread-ai/mxbai-rerank-xsmall-v1'); \
from sentence_transformers import SentenceTransformer; \
SentenceTransformer(model_name_or_path='nomic-ai/nomic-embed-text-v1', trust_remote_code=True);"

# In case the user has volumes mounted to /app/.cache/huggingface that they've downloaded while
# running Alvio, move the current contents of the cache folder to a temporary location to ensure 
# it's preserved in order to combine with the user's cache contents
RUN mv /app/.cache/huggingface /app/.cache/temp_huggingface && \
    chown -R alvio:alvio /app

WORKDIR /app

# Copy local Alvio custom models (instead of downloading from HuggingFace)
COPY ./models/hybrid-intent-token-classifier /app/models/hybrid-intent-token-classifier
COPY ./models/information-content-model /app/models/information-content-model
COPY ./models/filter-extraction-model /app/models/filter-extraction-model

# Utils used by model server
COPY ./alvio/utils/logger.py /app/alvio/utils/logger.py
COPY ./alvio/utils/middleware.py /app/alvio/utils/middleware.py

# Place to fetch version information
COPY ./alvio/__init__.py /app/alvio/__init__.py

# Shared between Alvio Backend and Model Server
COPY ./shared_configs /app/shared_configs

# Model Server main code
COPY ./model_server /app/model_server

ENV PYTHONPATH=/app

CMD ["uvicorn", "model_server.main:app", "--host", "0.0.0.0", "--port", "9000"]
